{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashutosh\\\\Desktop\\\\myweather\\\\React-Weather-App\\\\src\\\\components\\\\Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [query, setQuery] = useState();\n  const [weather, setWeather] = useState({\n    data: {},\n    error: false\n  });\n\n  const toDate = () => {\n    // let date = new Date();\n    // const today = date.toDateString();\n    // return today;\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const currentDate = new Date();\n    const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\n    return date;\n  };\n\n  const search = async event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setQuery('');\n      setWeather({ ...weather\n      });\n      const url = 'https://api.openweathermap.org/data/2.5/weather';\n      const appid = '93768c2b81a845629c39cf9da4d9d2ca'; //console.log('Enter');\n\n      await axios.get(url, {\n        params: {\n          q: query,\n          units: 'metric',\n          appid: appid\n        }\n      }).then(res => {\n        console.log('res', res);\n        setWeather({\n          data: res.data,\n          loading: false,\n          error: false\n        });\n      }).catch(error => {\n        setWeather({ ...weather,\n          data: {},\n          error: true\n        });\n        setQuery('');\n        console.log('error', error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-name\",\n      children: [\"Weather App\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83C\\uDF24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"city-search\",\n        placeholder: \"Search City..\",\n        name: \"query\",\n        value: query,\n        onChange: event => setQuery(event.target.value),\n        onKeyPress: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), weather.error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            'font-size': '20px'\n          },\n          children: \" Sorry, City not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), weather && weather.data && weather.data.main && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-name\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [weather.data.name, \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weather.data.sys.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: toDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"\",\n          src: `https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`,\n          alt: weather.data.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), Math.round(weather.data.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n          className: \"deg\",\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"des-wind\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather.data.weather[0].description.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed: \", weather.data.wind.speed, \"m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"i/5QsAF7ZtpYtNfkuOtLzDAK0BU=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","Weather","query","setQuery","weather","setWeather","data","error","toDate","months","days","currentDate","Date","date","getDay","getDate","getMonth","search","event","key","preventDefault","url","appid","get","params","q","units","then","res","console","log","loading","catch","target","value","main","name","sys","country","icon","description","Math","round","temp","toUpperCase","wind","speed"],"sources":["C:/Users/Ashutosh/Desktop/myweather/React-Weather-App/src/components/Weather.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Weather() {\r\n    const [query, setQuery] = useState();\r\n    const [weather, setWeather] = useState({\r\n        data: {},\r\n        error: false,\r\n    });\r\n\r\n    const toDate = () => {\r\n        // let date = new Date();\r\n        // const today = date.toDateString();\r\n        // return today;\r\n        const months = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ];\r\n        const days = [\r\n            'Sunday',\r\n            'Monday',\r\n            'Tuesday',\r\n            'Wednesday',\r\n            'Thursday',\r\n            'Friday',\r\n            'Saturday',\r\n        ];\r\n        const currentDate = new Date();\r\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]\r\n            }`;\r\n        return date;\r\n    };\r\n\r\n    const search = async (event) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            setQuery('');\r\n            setWeather({ ...weather });\r\n            const url = 'https://api.openweathermap.org/data/2.5/weather';\r\n            const appid = '93768c2b81a845629c39cf9da4d9d2ca';\r\n            //console.log('Enter');\r\n\r\n            await axios\r\n                .get(url, {\r\n                    params: {\r\n                        q: query,\r\n                        units: 'metric',\r\n                        appid: appid,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    console.log('res', res);\r\n                    setWeather({ data: res.data, loading: false, error: false });\r\n                })\r\n                .catch((error) => {\r\n                    setWeather({ ...weather, data: {}, error: true });\r\n                    setQuery('');\r\n                    console.log('error', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"app-name\">\r\n                Weather App<span>ðŸŒ¤</span>\r\n            </h1>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city-search\"\r\n                    placeholder=\"Search City..\"\r\n                    name=\"query\"\r\n                    value={query}\r\n                    onChange={(event) => setQuery(event.target.value)}\r\n                    onKeyPress={search}\r\n                />\r\n            </div>\r\n            {weather.error && (\r\n                <>\r\n                    <br />\r\n                    <br />\r\n                    <span className=\"error-message\">\r\n                        <span style={{ 'font-size': '20px' }}> Sorry, City not found</span>\r\n                    </span>\r\n                </>\r\n            )}\r\n\r\n            {weather && weather.data && weather.data.main && (\r\n                <div>\r\n                    <div className=\"city-name\">\r\n                        <h2>\r\n                            {weather.data.name}, <span>{weather.data.sys.country}</span>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"date\">\r\n                        <span>{toDate()}</span>\r\n                    </div>\r\n                    <div className=\"icon-temp\">\r\n                        <img\r\n                            className=\"\"\r\n                            src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`}\r\n                            alt={weather.data.weather[0].description}\r\n                        />\r\n                        {Math.round(weather.data.main.temp)}\r\n                        <sup className=\"deg\">&deg;C</sup>\r\n                    </div>\r\n                    <div className=\"des-wind\">\r\n                        <p>{weather.data.weather[0].description.toUpperCase()}</p>\r\n                        <p>Wind Speed: {weather.data.wind.speed}m/s</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Weather;"],"mappings":"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"},"metadata":{},"sourceType":"module"}